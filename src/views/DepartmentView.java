/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;



import controllers.DepartmentController;
import controllers.DepartmentController1;
import controllers.DepartmentControllerInterface;
import daos.DAOInterface;
import daos.GeneralDAO;
import entities.Department;
import entities.Employee;
import entities.Location;
import entities.Region;
import java.math.BigDecimal;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import tools.HibernateUtil;

/**
 *
 * @author yudafatah
 */
public class DepartmentView extends javax.swing.JInternalFrame {
    SessionFactory sessionFactory = sessionFactory = HibernateUtil.getSessionFactory();;
    DepartmentController dc = new DepartmentController(sessionFactory);
    DepartmentControllerInterface daoi = new DepartmentController1(sessionFactory);
    /**
     * Creates new form RegionView
     */
    public DepartmentView() {
        initComponents();
        System.out.println(sessionFactory);
        reset();
        selectEmployeeId();
        selectLocatoId();
    }
    
    public void reset(){
        getDatas(daoi.getAlls(new Department(), ""));
        String maxId="";
        for (Object all : daoi.getAlls(new Department(), "")) {
            Department department = (Department) all;
            maxId =""+(department.getDepartmentId()+1);
        }
        txtDepartId.setEditable(false);
        txtDepartId.setText(maxId);
        txtDepartName.setText("");
        cbxManager.setSelectedItem("Pilih Manager");
        cbxLocation.setSelectedItem("Pilih Location");
    }
    
    private void getDatas(List<Object> dep){
        Object[] header = {"No", "Department ID", "Department Name", "Manager", "Location"};
        DefaultTableModel data = new DefaultTableModel(null, header);
        tableReg.setModel(data); 
        try {
            int no = 1;
            for (Object obj : dep) {
                Department department = (Department) obj;
                String isi0 = String.valueOf(no);
                String isi1 = String.valueOf(department.getDepartmentId());
                String isi2 = department.getDepartmentName();
                String isi4 = "";
                String isi3 = "";
                if(department.getManagerId()!=null){
                    isi3 =""+department.getManagerId().getLastName();
                }
                if(department.getLocationId()!=null){
                    isi4=""+department.getLocationId().getCity();
                }
                String kolom[] = {isi0, isi1, isi2, isi3,isi4};
                data.addRow(kolom);
                no++;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Oops! : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableReg = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDepartId = new javax.swing.JTextField();
        txtDepartName = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        txtSearchId = new javax.swing.JTextField();
        btnSearchId = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxManager = new javax.swing.JComboBox<>();
        cbxLocation = new javax.swing.JComboBox<>();

        tableReg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableReg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRegMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableReg);

        jLabel1.setText("Department ID");

        jLabel2.setText("Department Name");

        txtDepartId.setEditable(false);
        txtDepartId.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDepartName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSearchId.setText("Search ID");
        btnSearchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchIdActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel3.setText("Manager");

        jLabel4.setText("Location");

        cbxManager.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Manager" }));

        cbxLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Location" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(41, 41, 41)
                                .addComponent(txtDepartId))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDepartName)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSave)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnReset))
                                    .addComponent(cbxManager, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSearchId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchId))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDepartId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchId))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDepartName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnReset))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (btnSave.getText().equals("Save")){
            String idDepart = txtDepartId.getText();
            String departName = txtDepartName.getText();
            String manager = cbxManager.getSelectedItem().toString();
            String location = cbxLocation.getSelectedItem().toString();
//            Employee employee = new Employee(Integer.parseInt(manager));
//            Location location1 = new Location(Short.parseShort(location));
            //Department department = new Department(Short.parseShort(idDepart), departName, employee, location1);
            if (!idDepart.equals("") && !departName.equals("")) {
                JOptionPane.showMessageDialog(null, daoi.insert(idDepart,departName));
                reset();
            } else {
                JOptionPane.showMessageDialog(null, "Form input tidak boleh kosong");
            }
        }
        if (btnSave.getText().equals("Update")){
            String idDepart = txtDepartId.getText();
            String departName = txtDepartName.getText();
            String manager = cbxManager.getSelectedItem().toString();
            String location = cbxLocation.getSelectedItem().toString();
//            Employee employee = new Employee(Integer.parseInt(manager));
//            Location location1 = new Location(Short.parseShort(location));
            //Department department = new Department(Short.parseShort(idDepart), departName, employee, location1);

            if (!idDepart.equals("") && !departName.equals("")) {
                JOptionPane.showMessageDialog(null, daoi.update(idDepart,departName));
                reset();
            } else {
                JOptionPane.showMessageDialog(null, "Form input tidak boleh kosong");
            } 
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(!txtDepartId.getText().equals("") && !txtDepartName.getText().equals("")){
            int dialogButton = 0;
            int dialog = JOptionPane.showConfirmDialog (null, "Yakin hapus data?","Warning",dialogButton);
            if(dialog == JOptionPane.YES_OPTION){
                JOptionPane.showMessageDialog(null, "Data dengan id : "
                        + "" + txtDepartId.getText()+daoi.delete(txtDepartId.getText()));
                reset();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchIdActionPerformed
        // TODO add your handling code here:
        Department department = (Department) daoi.getById(new Department(), txtSearchId.getText());
        txtDepartId.setText(department.getDepartmentId().toString());
        txtDepartName.setText(department.getDepartmentName());
        cbxManager.setSelectedItem(department.getManagerId().getManagerId()+" "
                + ""+department.getManagerId().getLastName());
    }//GEN-LAST:event_btnSearchIdActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        getDatas(daoi.search(new Department(), txtSearch.getText()));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tableRegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRegMouseClicked
        // TODO add your handling code here:
        int baris = tableReg.getSelectedRow();
        int kolom = tableReg.getSelectedColumn();
        String dataTerpilih = tableReg.getValueAt(baris, kolom).toString();
        String idDepartment = tableReg.getValueAt(baris, 1).toString();
        String nameDepartment = tableReg.getValueAt(baris, 2).toString();
        String idManager = tableReg.getValueAt(baris, 3).toString();
        String idLocation = tableReg.getValueAt(baris, 4).toString();

        //set from
        txtDepartId.setEditable(false);
        txtDepartId.setText(idDepartment);
        txtDepartName.setText(nameDepartment);
        String employeeName="";
        String city="";
        
        
        if (idManager.equals("0")) {
            cbxManager.setSelectedItem("Pilih Manager");
            cbxLocation.setSelectedItem(idLocation);
        } else if (idLocation.equals("0")) {
            cbxManager.setSelectedItem(idManager);
            cbxLocation.setSelectedItem("Pilih Location");
        } else if (idManager.equals("0") && idLocation.equals("0")) {
            cbxManager.setSelectedItem("Pilih Manager");
            cbxLocation.setSelectedItem("Pilih Location");
        } else {
            cbxManager.setSelectedItem(idManager);
            cbxLocation.setSelectedItem(idLocation);
        }
        btnSave.setText("Update");
    }//GEN-LAST:event_tableRegMouseClicked

    public void selectEmployeeId() {
        String employeeId;
        String lastName;
        try {
            for (Object obj : daoi.getManagerId(new Employee(), "")) {
                Employee employee = (Employee) obj;
                employeeId = String.valueOf(employee.getEmployeeId());
                lastName = employee.getLastName();
                String mix = employeeId+" "+lastName;
                cbxManager.addItem(mix);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "selectEmployeeId is " + e.getMessage());
        }
    }
    public void selectLocatoId() {
        String locationId;
        String city;
        try {
            for (Object obj : daoi.getLocationId(new Location(), "")) {
                Location location = (Location) obj;
                locationId = String.valueOf(location.getLocationId());
                city = location.getCity();
                String mix = locationId+" "+city;
                cbxLocation.addItem(mix);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "selectLocationId is " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchId;
    private javax.swing.JComboBox<String> cbxLocation;
    private javax.swing.JComboBox<String> cbxManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableReg;
    private javax.swing.JTextField txtDepartId;
    private javax.swing.JTextField txtDepartName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchId;
    // End of variables declaration//GEN-END:variables
}
